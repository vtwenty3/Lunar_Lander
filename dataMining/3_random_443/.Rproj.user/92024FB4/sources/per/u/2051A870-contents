# Load necessary libraries
library(ggplot2)
library(dplyr)
#install.packages("reshape2")



# Read dataset
filtered_dataset <- dataset[dataset$averageFitness < 0.15,]


dataset <- read.csv("random_search_combined.csv")

# Custom color palette
color_palette <- c("#128EFB", "orange", "#D81B60")
my_theme <- theme_bw() + 
  theme(text = element_text(size = 14), 
        panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray60"), 
        panel.grid.minor = element_line(size = 0.25, linetype = "dashed", color = "gray60"))

# Select relevant columns
relevant_columns <- c("MinGene", "MaxGene", "PopSize", "TournamentSize", "PreserveElitePercentage", "MutateChangePopulation", "MaxMutationRate" )

# Melt the dataset for ggplot2
library(reshape2)
melted_dataset <- melt(dataset, id.vars = c("Iteration", "AverageFitness", "ActivationFunction"), measure.vars = relevant_columns)

# Create a list of plots
plots <- lapply(relevant_columns, function(variable) {
  plot <- ggplot(melted_dataset[melted_dataset$variable == variable,], aes(x = AverageFitness, y = value, color = ActivationFunction, shape = ActivationFunction)) +
    geom_point(alpha = 1, size = 3) +
    geom_smooth(method = "loess", se = TRUE, linetype = "solid", level = 0.20, size = 1, alpha = 0.00) +
    my_theme +
    #facet_grid(rows = vars(ActivationFunction)) +
    labs(title = paste("Average Fitness vs.", variable),
         x = "Average Fitness", y = "Value") 
  return(plot)
})

# Display plots one by one
for (plot in plots) {
  print(plot)
}




# Custom color palette
color_palette <- c("#128EFB", "orange", "#D81B60")
my_theme <- theme_bw() + 
  theme(text = element_text(size = 14), 
        panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray60"), 
        panel.grid.minor = element_line(size = 0.25, linetype = "dashed", color = "gray60"))

# Select relevant columns
relevant_columns <- c("MinGene", "MaxGene", "PopSize", "TournamentSize", "PreserveElitePercentage", "MutateChangePopulation", "MaxMutationRate" )

# Melt the dataset for ggplot2
library(reshape2)
melted_dataset <- melt(dataset, id.vars = c("Iteration", "AverageFitness", "ActivationFunction"), measure.vars = relevant_columns)

# Filter the dataset for AverageFitness less than 0.15
filtered_dataset <- melted_dataset[melted_dataset$AverageFitness < 0.15,]

# Create a list of plots
plots <- lapply(relevant_columns, function(variable) {
  plot <- ggplot(filtered_dataset, aes(x = AverageFitness, y = value, color = ActivationFunction, shape = ActivationFunction)) +
    geom_point(alpha = 1, size = 3) +
    geom_smooth(method = "loess", se = TRUE, linetype = "solid", level = 0.20, size = 1, alpha = 0.00) +
    my_theme +
    facet_grid(rows = vars(ActivationFunction)) +
    
    labs(title = paste("Average Fitness vs.", variable),
         x = "Average Fitness", y = "Value") 
  return(plot)
})

# Display plots one by one
for (plot in plots) {
  print(plot)
}











# Read dataset
dataset <- read.csv("random_search_combined.csv")

# Custom color palette
color_palette <- c("#128EFB", "orange", "#D81B60")
my_theme <- theme_bw() + 
  theme(text = element_text(size = 14), 
        panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray60"), 
        panel.grid.minor = element_line(size = 0.25, linetype = "dashed", color = "gray60"))

# Select relevant columns
relevant_columns <- c("MinGene", "MaxGene", "PopSize", "TournamentSize", "PreserveElitePercentage", "MutateChangePopulation", "MaxMutationRate" )

# Melt the dataset for ggplot2
library(reshape2)
melted_dataset <- melt(dataset, id.vars = c("Iteration", "AverageFitness", "ActivationFunction"), measure.vars = relevant_columns)

# Create a list of plots
plots <- lapply(relevant_columns, function(variable) {
  plot_dataset <- melted_dataset[melted_dataset$variable == variable & melted_dataset$AverageFitness < 0.15, ]
  plot <- ggplot(plot_dataset, aes(x = AverageFitness, y = value,  shape = ActivationFunction)) +
    geom_point(alpha = 1, size = 3) +
    geom_smooth(method = "loess", se = TRUE, linetype = "solid", level = 0.20, size = 1, alpha = 0.00) +
    my_theme +
    scale_color_manual(values = color_palette) +
    scale_shape_manual(values = c(16, 17, 18)) +
    facet_grid(rows = vars(ActivationFunction)) +
    
    labs(title = paste("Average Fitness vs.", variable),
         x = "Average Fitness", y = "Value") 
  return(plot)
})

# Display plots one by one
for (plot in plots) {
  print(plot)
}


# Read dataset
dataset <- read.csv("random_search_combined.csv")

# Custom color palette
color_palette <- c("#128EFB", "orange", "#D81B60")
my_theme <- theme_bw() + 
  theme(text = element_text(size = 14), 
        panel.grid.major = element_line(size = 0.5, linetype = "dashed", color = "gray60"), 
        panel.grid.minor = element_line(size = 0.25, linetype = "dashed", color = "gray60"),
        legend.position = "bottom")

# Select relevant columns
relevant_columns <- c("MinGene", "MaxGene", "PopSize", "TournamentSize", "PreserveElitePercentage", "MutateChangePopulation", "MaxMutationRate" )

# Melt the dataset for ggplot2
library(reshape2)
melted_dataset <- melt(dataset, id.vars = c("Iteration", "AverageFitness", "ActivationFunction", "MaxGene", "MutateChangePopulation"), measure.vars = relevant_columns)

# Create a list of plots
plots <- lapply(relevant_columns, function(variable) {
  plot_dataset <- melted_dataset[melted_dataset$variable == variable & melted_dataset$AverageFitness < 0.10, ]
  plot <- ggplot(plot_dataset, aes(x = AverageFitness, y = value, color = MutateChangePopulation )) +
    geom_point(alpha = 1, size = 3) +
    geom_smooth(method = "loess", se = TRUE, linetype = "solid", level = 0.75, size = 1, alpha = 0.20) +
    my_theme +
    scale_color_gradient(low = "#f7c602", high = "black") +
    facet_grid(rows = vars(ActivationFunction)) +
    labs(title = paste("Average Fitness vs.", variable),
         x = "Average Fitness", y = "Value") 
  return(plot)
})

# Display plots one by one
for (plot in plots) {
  print(plot)
}